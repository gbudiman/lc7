;> 0  {LEADER} MAKESPACE 0
;> 0     MAKEPARAM 0
;> 0     STORES "Please enter an integer number: " input
;> 0     STORES "here" here
;> 0     STORES "\n" eol
;> 0     MAKESPACE 1
;> 0     MAKEPARAM 1
;> 0     ;Generating code for function factorial
;> 1  {LEADER} LABEL factorial
;> 1     LINK
;> 1     STOREI 1 $T0
;> 1     NE $P0 $T0 LABEL1
;> 2  {LEADER} STOREI 1 $T1
;> 2     STOREI $T1 $R
;> 2     RET
;> 3  {LEADER} JUMP LABEL0
;> 4  {LEADER} LABEL LABEL1
;> 4     STOREI 1 $T2
;> 4     SUBI $P0 $T2 $T3
;> 4     PUSH
;> 4     PUSH $T3
;> 4     JSR factorial
;> 5  {LEADER} POP
;> 5     POP $T4
;> 5     MULTI $T4 $P0 $T5
;> 5     STOREI $T5 $L0
;> 6  {LEADER} LABEL LABEL0
;> 6     STOREI $L0 $R
;> 6     RET
;> 7  {LEADER} MAKESPACE 2
;> 7     MAKEPARAM 0
;> 7     ;Generating code for function main
;> 8  {LEADER} LABEL main
;> 8     LINK
;> 8     WRITES input
;> 8     READI $L0
;> 8     STOREI 1 $T6
;> 8     NE $L0 $T6 LABEL3
;> 9  {LEADER} STOREI 1 $T7
;> 9     STOREI $T7 $L1
;> 9     JUMP LABEL2
;> 10  {LEADER} LABEL LABEL3
;> 10     STOREI 1 $T8
;> 10     LEQ $L0 $T8 LABEL5
;> 11  {LEADER} PUSH
;> 11     PUSH $L0
;> 11     JSR factorial
;> 12  {LEADER} POP
;> 12     POP $T9
;> 12     STOREI $T9 $L1
;> 12     JUMP LABEL4
;> 13  {LEADER} LABEL LABEL5
;> 13     STOREI 0 $T10
;> 13     STOREI $T10 $L1
;> 14  {LEADER} LABEL LABEL4
;> 15  {LEADER} LABEL LABEL2
;> 15     WRITEI $L1
;> 15     WRITES eol
;> 15     STOREI 0 $T11
;> 15     STOREI $T11 $R
;> 15     RET
;str input "Please enter an integer number: ";0 []                      _ _ _ _ 
    str input "Please enter an integer number: "
;str here "here"     ;0 []                      _ _ _ _ 
    str here "here"
;str eol "\n"        ;0 []                      _ _ _ _ 
    str eol "\n"
;push                ;0 []                      _ _ _ _ 
    push
;push r0             ;0 []                      _ _ _ _ 
    push r0
;push r1             ;0 []                      _ _ _ _ 
    push r1
;push r2             ;0 []                      _ _ _ _ 
    push r2
;push r3             ;0 []                      _ _ _ _ 
    push r3
;jsr main            ;0 []                      _ _ _ _ 
    jsr main
;sys halt            ;0 []                      _ _ _ _ 
    sys halt
;label factorial     ;1 []                      _ _ _ _ 
    label factorial
;link 1              ;1 []                      _ _ _ _ 
    link 1
;move 1 x0           ;1 []                      x0* _ _ _ 
    move 1 r0
;cmpi $6 x0          ;1 [x0]                    x0* _ _ _ 
    cmpi $6 r0
;jne LABEL1          ;1 []                      _ _ _ _ 
    jne LABEL1
;move 1 x1           ;2 []                      x1* _ _ _ 
    move 1 r0
;move x1 x2          ;2 [x1]                    x1* x2* _ _ 
    move r0 r1
;move x2 $7          ;2 [x2]                    _ x2* _ _ 
    move r1 $7
;unlnk               ;2 []                      _ _ _ _ 
    unlnk
;ret                 ;2 []                      _ _ _ _ 
    ret
;jmp LABEL0          ;3 []                      _ _ _ _ 
    jmp LABEL0
;label LABEL1        ;4 []                      _ _ _ _ 
    label LABEL1
;move 1 x3           ;4 []                      x3* _ _ _ 
    move 1 r0
;move $6 x4          ;4 [x3]                    x3* x4* _ _ 
    move $6 r1
;subi x3 x4          ;4 [x3]                    x3* x4* _ _ 
    subi r0 r1
;push                ;4 [x4]                    _ _ _ _ 
    push
;push x4             ;4 [x4]                    _ x4* _ _ 
    push r1
;push r0             ;4 []                      _ _ _ _ 
    push r0
;push r1             ;4 []                      _ _ _ _ 
    push r1
;push r2             ;4 []                      _ _ _ _ 
    push r2
;push r3             ;4 []                      _ _ _ _ 
    push r3
;jsr factorial       ;4 []                      _ _ _ _ 
    jsr factorial
;pop r3              ;4 []                      _ _ _ _ 
    pop r3
;pop r2              ;4 []                      _ _ _ _ 
    pop r2
;pop r1              ;4 []                      _ _ _ _ 
    pop r1
;pop r0              ;4 []                      _ _ _ _ 
    pop r0
;pop                 ;5 [x5, x5]                _ _ _ _ 
    pop
;pop x5              ;5 [x5, x5]                x5* _ _ _ 
    pop r0
;move x5 x6          ;5 [x5]                    x5* x6* _ _ 
    move r0 r1
;muli $6 x6          ;5 []                      _ x6* _ _ 
    muli $6 r1
;move x6 $-1         ;5 [x6]                    _ x6* _ _ 
    move r1 $-1
;label LABEL0        ;6 []                      _ _ _ _ 
    label LABEL0
;move $-1 x7         ;6 []                      x7* _ _ _ 
    move $-1 r0
;move x7 $7          ;6 [x7]                    x7* _ _ _ 
    move r0 $7
;unlnk               ;6 []                      _ _ _ _ 
    unlnk
;ret                 ;6 []                      _ _ _ _ 
    ret
;label main          ;8 []                      _ _ _ _ 
    label main
;link 2              ;8 []                      _ _ _ _ 
    link 2
;sys writes input    ;8 []                      _ _ _ _ 
    sys writes input
;sys readi $-1       ;8 []                      _ _ _ _ 
    sys readi $-1
;move 1 x8           ;8 []                      x8* _ _ _ 
    move 1 r0
;cmpi $-1 x8         ;8 [x8]                    x8* _ _ _ 
    cmpi $-1 r0
;jne LABEL3          ;8 []                      _ _ _ _ 
    jne LABEL3
;move 1 x9           ;9 []                      x9* _ _ _ 
    move 1 r0
;move x9 $-2         ;9 [x9]                    x9* _ _ _ 
    move r0 $-2
;jmp LABEL2          ;9 []                      _ _ _ _ 
    jmp LABEL2
;label LABEL3        ;10 []                      _ _ _ _ 
    label LABEL3
;move 1 x10          ;10 []                      x10* _ _ _ 
    move 1 r0
;cmpi $-1 x10        ;10 [x10]                   x10* _ _ _ 
    cmpi $-1 r0
;jle LABEL5          ;10 []                      _ _ _ _ 
    jle LABEL5
;push                ;11 []                      _ _ _ _ 
    push
;push $-1            ;11 []                      _ _ _ _ 
    push $-1
;push r0             ;11 []                      _ _ _ _ 
    push r0
;push r1             ;11 []                      _ _ _ _ 
    push r1
;push r2             ;11 []                      _ _ _ _ 
    push r2
;push r3             ;11 []                      _ _ _ _ 
    push r3
;jsr factorial       ;11 []                      _ _ _ _ 
    jsr factorial
;pop r3              ;11 []                      _ _ _ _ 
    pop r3
;pop r2              ;11 []                      _ _ _ _ 
    pop r2
;pop r1              ;11 []                      _ _ _ _ 
    pop r1
;pop r0              ;11 []                      _ _ _ _ 
    pop r0
;pop                 ;12 [x11, x11]              _ _ _ _ 
    pop
;pop x11             ;12 [x11, x11]              x11* _ _ _ 
    pop r0
;move x11 $-2        ;12 [x11]                   x11* _ _ _ 
    move r0 $-2
;jmp LABEL4          ;12 []                      _ _ _ _ 
    jmp LABEL4
;label LABEL5        ;13 []                      _ _ _ _ 
    label LABEL5
;move 0 x12          ;13 []                      x12* _ _ _ 
    move 0 r0
;move x12 $-2        ;13 [x12]                   x12* _ _ _ 
    move r0 $-2
;label LABEL4        ;14 []                      _ _ _ _ 
    label LABEL4
;label LABEL2        ;15 []                      _ _ _ _ 
    label LABEL2
;sys writei $-2      ;15 []                      _ _ _ _ 
    sys writei $-2
;sys writes eol      ;15 []                      _ _ _ _ 
    sys writes eol
;move 0 x13          ;15 []                      x13* _ _ _ 
    move 0 r0
;move x13 x14        ;15 [x13]                   x13* x14* _ _ 
    move r0 r1
;move x14 $6         ;15 [x14]                   _ x14* _ _ 
    move r1 $6
;unlnk               ;15 []                      _ _ _ _ 
    unlnk
;ret                 ;15 []                      _ _ _ _ 
    ret
;end                 ;15 []                      _ _ _ _ 
    end
